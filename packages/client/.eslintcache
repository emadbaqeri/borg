[{"/home/farhoud/workspace/functionland/box/packages/client/src/index.tsx":"1","/home/farhoud/workspace/functionland/box/packages/client/src/reportWebVitals.ts":"2","/home/farhoud/workspace/functionland/box/packages/client/src/App.tsx":"3","/home/farhoud/workspace/functionland/box/packages/client/src/FileTransfer.tsx":"4"},{"size":500,"mtime":1630057270104,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1630057270104,"results":"7","hashOfConfig":"6"},{"size":663,"mtime":1630059251031,"results":"8","hashOfConfig":"6"},{"size":1403,"mtime":1630076741752,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15xdi1q",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/home/farhoud/workspace/functionland/box/packages/client/src/index.tsx",[],"/home/farhoud/workspace/functionland/box/packages/client/src/reportWebVitals.ts",[],"/home/farhoud/workspace/functionland/box/packages/client/src/App.tsx",[],"/home/farhoud/workspace/functionland/box/packages/client/src/FileTransfer.tsx",["19"],"import React from 'react';\nimport { useEffect } from 'react';\nimport './FileTransfer.css';\nimport graph from '@functionland/graph'\n\ninterface FileTransferProps {\n    /**\n     * Is this the principal call to action on the page?\n     */\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const FileTransfer =  ({\n    ...props\n}: FileTransferProps) => {\n    useEffect( () => {\n        let myGraph = graph();\n        // (async ()=>{\n        //     let myGraph = graph();\n        //     await myGraph.connect();\n        // })()\n\n    })\n    return (\n        <div\n            {...props}\n        >\n            <header>\n                <h1 id=\"status\">Starting libp2p...</h1>\n                <input id=\"serverId\" style={{ width: \"500px\" }} placeholder={\"Type server's PeerId here\"} />\n                <input id=\"file\" type=\"file\" />\n                <button id=\"send\">Send</button>\n                <br />\n                <br />\n                <input id=\"fileId\" style={{ width: \"500px\" }} placeholder=\"Enter _id of a file here\" />\n                <button id=\"receive\">Receive</button>\n                <button id=\"meta\">Meta</button>\n                <br />\n                <br />\n                <textarea id=\"content\" style={{ width: \"500px\", height: \"100px\" }}></textarea>\n            </header>\n            <main>\n                <pre id=\"output\"></pre>\n            </main>\n        </div>\n    );\n};\n",{"ruleId":"20","severity":1,"message":"21","line":19,"column":13,"nodeType":"22","messageId":"23","endLine":19,"endColumn":20},"@typescript-eslint/no-unused-vars","'myGraph' is assigned a value but never used.","Identifier","unusedVar"]